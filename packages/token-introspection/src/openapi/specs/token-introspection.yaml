openapi: 3.1.0
info:
  title: Rafiki Authorization Server - Resource Server Connection
  version: '1.0'
  license:
    name: Apache 2.0
    identifier: Apache-2.0
  summary: Rafiki Authorization Server - Resource Server Connection
  description: 'The Open Payments API is secured via [GNAP](https://datatracker.ietf.org/doc/html/draft-ietf-gnap-core-protocol). This specification describes the connection between the Rafiki Open Payments Authorization Server and the Rafiki Open Payments Resource Server, which is an opinionated version of the [Grant Negotiation and Authorization Protocol Resource Server Connections](https://datatracker.ietf.org/doc/html/draft-ietf-gnap-resource-servers).'
  contact:
    email: tech@interledger.org
servers:
  - url: 'https://openpayments.guide/auth'
tags:
  - name: introspection
    description: Token introspection
paths:
  /:
    parameters: []
    post:
      summary: Introspect Access Token
      operationId: post-introspect
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      active:
                        type: boolean
                        enum:
                          - false
                    required:
                      - active
                  - $ref: '#/components/schemas/token-info'
              examples:
                Token Introspection:
                  value:
                    active: true
                    grant: 1ee48d97-8fa1-4ab4-b89d-95284b665517
                    access:
                      - type: outgoing-payment
                        actions:
                          - create
                          - read
                        identifier: 'https://openpayments.guide/alice'
                        limits:
                          interval: 'R12/2019-08-24T14:15:22Z/P1M'
                          receiver: 'https://openpayments.guide/bob/incoming-payments/48884225-b393-4872-90de-1b737e2491c2'
                          debitAmount:
                            value: '500'
                            assetCode: USD
                            assetScale: 2
                    client: 'https://webmonize.com/.well-known/pay'
        '404':
          description: Not Found
      description: Introspect an access token to get grant details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The access token value presented to the RS by the client instance.
                access:
                  $ref: '#/components/schemas/access'
              required:
                - access_token
            examples:
              Introspect token:
                value:
                  access_token: OS9M2PMHKUR64TB8N6BW7OZB8CDFONP219RP1LT0
      tags:
        - introspection
components:
  schemas:
    token-info:
      title: token-info
      type: object
      properties:
        active:
          type: boolean
          enum:
            - true
        grant:
          type: string
        access:
          $ref: '#/components/schemas/access'
        client:
          title: client
          type: string
          description: |-
            Wallet address of the client instance that is making this request.

            When sending a non-continuation request to the AS, the client instance MUST identify itself by including the client field of the request and by signing the request.

            A JSON Web Key Set document, including the public key that the client instance will use to protect this request and any continuation requests at the AS and any user-facing information about the client instance used in interactions, MUST be available at the wallet address + `/jwks.json` url.

            If sending a grant initiation request that requires RO interaction, the wallet address MUST serve necessary client display information.
      required:
        - active
        - grant
        - access
        - client
    amount:
      title: amount
      type: object
      properties:
        value:
          type: string
          format: uint64
          description: 'The value is an unsigned 64-bit integer amount, represented as a string.'
        assetCode:
          title: Asset code
          type: string
          description: The assetCode is a code that indicates the underlying asset. An ISO4217 currency code should be used whenever possible. The ISO4217 representation of the US Dollar is USD.
        assetScale:
          title: Asset scale
          type: integer
          minimum: 0
          maximum: 255
          description: The number of decimal places that defines the scale of the smallest divisible unit for the given asset code. It determines how an integer amount is scaled to derive the actual monetary value. For example, USD has an asset scale of 2 with the smallest unit being 0.01. An integer amount of `1000` with an `assetCode` of `USD` and `assetScale` of `2` translates to $10.00.
      required:
        - value
        - assetCode
        - assetScale
    receiver:
      title: Receiver
      type: string
      description: The URL of the incoming payment that is being paid.
      format: uri
      pattern: '^(https|http)://(.+)/incoming-payments/(.+)$'
      examples:
        - 'https://ilp.interledger-test.dev/incoming-payments/08394f02-7b7b-45e2-b645-51d04e7c330c'
        - 'http://ilp.interledger-test.dev/incoming-payments/08394f02-7b7b-45e2-b645-51d04e7c330c'
        - 'https://ilp.interledger-test.dev/incoming-payments/1'
    interval:
      title: Interval
      type: string
      description: '[ISO8601 repeating interval](https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals)'
      examples:
        - 'R11/2022-08-24T14:15:22Z/P1M'
        - 'R/2017-03-01T13:00:00Z/2018-05-11T15:30:00Z'
        - 'R-1/P1Y2M10DT2H30M/2022-05-11T15:30:00Z'
    limits-outgoing:
      title: limits-outgoing
      description: Open Payments specific property that defines the limits under which outgoing payments can be created.
      anyOf:
        - type: object
          properties:
            receiver:
              $ref: '#/components/schemas/receiver'
            interval:
              $ref: '#/components/schemas/interval'
        - type: object
          properties:
            receiver:
              $ref: '#/components/schemas/receiver'
            interval:
              $ref: '#/components/schemas/interval'
            debitAmount:
              description: 'All amounts are maxima, i.e. multiple payments can be created under a grant as long as the total amounts of these payments do not exceed the maximum amount per interval as specified in the grant.'
              $ref: '#/components/schemas/amount'
          required:
            - debitAmount
        - type: object
          properties:
            receiver:
              $ref: '#/components/schemas/receiver'
            interval:
              $ref: '#/components/schemas/interval'
            receiveAmount:
              description: 'All amounts are maxima, i.e. multiple payments can be created under a grant as long as the total amounts of these payments do not exceed the maximum amount per interval as specified in the grant.'
              $ref: '#/components/schemas/amount'
          required:
            - receiveAmount
    access:
      type: array
      description: A description of the rights associated with this access token.
      items:
        $ref: '#/components/schemas/access-item'
      uniqueItems: true
      maxItems: 3
    access-item:
      oneOf:
        - $ref: '#/components/schemas/access-incoming'
        - $ref: '#/components/schemas/access-outgoing'
        - $ref: '#/components/schemas/access-quote'
      description: The access associated with the access token is described using objects that each contain multiple dimensions of access.
      unevaluatedProperties: false
    access-incoming:
      title: access-incoming
      type: object
      properties:
        type:
          type: string
          enum:
            - incoming-payment
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - complete
              - read
              - read-all
              - list
              - list-all
          uniqueItems: true
        identifier:
          type: string
          format: uri
          description: A string identifier indicating a specific resource at the RS.
      required:
        - type
        - actions
    access-outgoing:
      title: access-outgoing
      type: object
      properties:
        type:
          type: string
          enum:
            - outgoing-payment
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - read
              - read-all
              - list
              - list-all
          uniqueItems: true
        identifier:
          type: string
          format: uri
          description: A string identifier indicating a specific resource at the RS.
        limits:
          $ref: '#/components/schemas/limits-outgoing'
      required:
        - type
        - actions
        - identifier
    access-quote:
      title: access-quote
      type: object
      properties:
        type:
          type: string
          enum:
            - quote
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - read
              - read-all
          uniqueItems: true
      required:
        - type
        - actions
  securitySchemes:
    GNAP:
      name: Authorization
      type: apiKey
      in: header
security:
  - GNAP: []
