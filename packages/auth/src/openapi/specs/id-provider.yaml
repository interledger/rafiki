openapi: 3.1.0
info:
  title: Rafiki Authorization Server - Identity Provider Connection
  version: '1.0'
  license:
    name: Apache 2.0
    identifier: Apache-2.0
  summary: Rafiki Authorization Server - Identity Provider Connection
  description: 'The Open Payments APIs are secured via [GNAP](https://datatracker.ietf.org/doc/html/draft-ietf-gnap-core-protocol). This specification describes the interaction endpoints used between a Rafiki Open Payments authorization server and an identity provider.'
  contact:
    email: tech@interledger.org
servers:
  - url: 'https://openpayments.dev/auth'
tags:
  - name: front-channel
    description: Redirect URLs
  - name: back-channel
    description: Endpoints to request or modify grant information
paths:
  '/interact/{id}/{nonce}':
    get:
      summary: Start user interaction session
      responses:
        '302':
          content:
            text/html:
              schema:
                type: string
                nullable: true
          description: Found
          headers:
            Location:
              schema:
                type: string
              description: Identity server endpoint
            Cookie:
              schema:
                type: string
              description: Interaction id
        '400':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-unknown-interaction'
        '403':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-invalid-interaction'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-request-denied'
      operationId: get-interact
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: Interaction id
        - schema:
            type: string
          in: path
          name: nonce
          required: true
          description: 'Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI. Must be sufficiently random to be unguessable by an attacker. MUST be generated by the client instance as a unique value for this request.'
        - schema:
            type: string
          name: clientName
          in: query
          required: true
          description: 'Name of the client that created the grant'
        - schema:
            type: string
          name: clientUri
          in: query
          required: true
          description: 'URI of the client that created the grant'
      description: 'This endpoint is called by the client to start the user interaction session for grant approval. The endpoint redirects the user to an identity provider endpoint for authentication.'
      tags:
        - front-channel
  '/interact/{id}/{nonce}/finish':
    get:
      summary: Finish user interaction
      operationId: get-finish-interaction
      responses:
        '202':
          description: Accepted
        '302':
          content:
            text/html:
              schema:
                type: string
                nullable: true
          description: Found
          headers:
            Location:
              schema:
                type: string
              description: Client finish endpoint
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/error-invalid-request'
                  - $ref: '#/components/schemas/error-invalid-interaction'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-unknown-interaction'
      description: "To finish the user interaction for grant approval, this endpoint redirects the user to the client's finish url."
      parameters:
        - schema:
            type: string
          in: path
          name: id
          required: true
          description: Interaction id
        - schema:
            type: string
          in: path
          name: nonce
          required: true
          description: 'Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI. Must be sufficiently random to be unguessable by an attacker. MUST be generated by the client instance as a unique value for this request.'
      tags:
        - front-channel
  '/grant/{id}/{nonce}':
    get:
      summary: Look up grant information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    $ref: '#/components/schemas/access'
                  subject:
                    $ref: '#/components/schemas/subject'
                  state:
                    description: |-
                      Interaction state:
                      * `PENDING` - Awaiting interaction from resource owner
                      * `APPROVED` - Resource owner approved interaction
                      * `DENIED` - Resource owner rejected interaction
                    type: string
                    enum:
                      - PENDING
                      - APPROVED
                      - DENIED
                  grantId:
                    description: Id of a grant
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-invalid-request'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-unknown-interaction'
      operationId: get-grant
      description: |
        This endpoint is called by the identity provider to get the grant details associated with the `interactId` on the front-channel. The identity provider will display the details to the user to either accept or deny.
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: Interaction id
        - schema:
            type: string
          in: path
          name: nonce
          required: true
          description: 'Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI. Must be sufficiently random to be unguessable by an attacker. MUST be generated by the client instance as a unique value for this request.'
      tags:
        - back-channel
  '/grant/{id}/{nonce}/{choice}':
    post:
      summary: Accept or reject a grant
      operationId: post-grant-choice
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/error-invalid-interaction'
                  - $ref: '#/components/schemas/error-invalid-request'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/error-invalid-interaction'
                  - $ref: '#/components/schemas/error-user-denied'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-unknown-interaction'
      description: The Identity Provider uses this endpoint to submit the user's choice regarding accepting or rejecting a grant to Authorization Server.
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: Interaction id
        - schema:
            type: string
          in: path
          name: nonce
          required: true
          description: 'Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI. Must be sufficiently random to be unguessable by an attacker. MUST be generated by the client instance as a unique value for this request.'
        - schema:
            type: string
            enum:
              - accept
              - reject
          in: path
          name: choice
          required: true
          description: Indicates the consent choice for a grant (i.e. acceptance or rejection)
      tags:
        - back-channel
components:
  schemas:
    access:
      type: array
      description: A description of the rights associated with this access token.
      items:
        $ref: '#/components/schemas/access-item'
      uniqueItems: true
      maxItems: 3
    access-item:
      oneOf:
        - $ref: '#/components/schemas/access-incoming'
        - $ref: '#/components/schemas/access-outgoing'
        - $ref: '#/components/schemas/access-quote'
      description: The access associated with the access token is described using objects that each contain multiple dimensions of access.
      unevaluatedProperties: false
    access-incoming:
      title: access-incoming
      type: object
      properties:
        type:
          type: string
          enum:
            - incoming-payment
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - complete
              - read
              - read-all
              - list
              - list-all
          uniqueItems: true
        identifier:
          type: string
          format: uri
          description: A string identifier indicating a specific resource at the RS.
      required:
        - type
        - actions
    access-outgoing:
      title: access-outgoing
      type: object
      properties:
        type:
          type: string
          enum:
            - outgoing-payment
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - read
              - read-all
              - list
              - list-all
          uniqueItems: true
        identifier:
          type: string
          format: uri
          description: A string identifier indicating a specific resource at the RS.
        limits:
          $ref: '#/components/schemas/limits-outgoing'
      required:
        - type
        - actions
        - identifier
    access-quote:
      title: access-quote
      type: object
      properties:
        type:
          type: string
          enum:
            - quote
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - read
              - read-all
          uniqueItems: true
      required:
        - type
        - actions
    subject:
      title: subject
      type: object
      description: Information about the subject for which the client is requesting information.
      properties:
        sub_ids:
          type: array
          description: A list of subject identifiers.
          items:
            type: object
            properties:
              id:
                type: string
                description: Specific identifier for the subject for which the client is requesting information.
              format:
                type: string
                description: The format of subject identifier that the client can accept.
                enum:
                  - uri
          minItems: 1
          maxItems: 1
      required:
        - sub_ids
    limits-outgoing:
      title: limits-outgoing
      description: Open Payments specific property that defines the limits under which outgoing payments can be created.
      anyOf:
        - type: object
          properties:
            receiver:
              $ref: '#/components/schemas/receiver'
            interval:
              $ref: '#/components/schemas/interval'
        - type: object
          properties:
            receiver:
              $ref: '#/components/schemas/receiver'
            interval:
              $ref: '#/components/schemas/interval'
            debitAmount:
              description: 'All amounts are maxima, i.e. multiple payments can be created under a grant as long as the total amounts of these payments do not exceed the maximum amount per interval as specified in the grant.'
              $ref: '#/components/schemas/amount'
          required:
            - debitAmount
        - type: object
          properties:
            receiver:
              $ref: '#/components/schemas/receiver'
            interval:
              $ref: '#/components/schemas/interval'
            receiveAmount:
              description: 'All amounts are maxima, i.e. multiple payments can be created under a grant as long as the total amounts of these payments do not exceed the maximum amount per interval as specified in the grant.'
              $ref: '#/components/schemas/amount'
          required:
            - receiveAmount
    amount:
      title: amount
      type: object
      properties:
        value:
          type: string
          format: uint64
          description: 'The value is an unsigned 64-bit integer amount, represented as a string.'
        assetCode:
          title: Asset code
          type: string
          description: The assetCode is a code that indicates the underlying asset. An ISO4217 currency code should be used whenever possible. The ISO4217 representation of the US Dollar is USD.
        assetScale:
          title: Asset scale
          type: integer
          minimum: 0
          maximum: 255
          description: The number of decimal places that defines the scale of the smallest divisible unit for the given asset code. It determines how an integer amount is scaled to derive the actual monetary value. For example, USD has an asset scale of 2 with the smallest unit being 0.01. An integer amount of `1000` with an `assetCode` of `USD` and `assetScale` of `2` translates to $10.00.
      required:
        - value
        - assetCode
        - assetScale
    receiver:
      title: Receiver
      type: string
      description: The URL of the incoming payment that is being paid.
      format: uri
      pattern: '^(https|http)://(.+)/incoming-payments/(.+)$'
      examples:
        - 'https://ilp.interledger-test.dev/incoming-payments/08394f02-7b7b-45e2-b645-51d04e7c330c'
        - 'http://ilp.interledger-test.dev/incoming-payments/08394f02-7b7b-45e2-b645-51d04e7c330c'
        - 'https://ilp.interledger-test.dev/incoming-payments/1'
    interval:
      title: Interval
      type: string
      description: '[ISO8601 repeating interval](https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals)'
      examples:
        - 'R11/2022-08-24T14:15:22Z/P1M'
        - 'R/2017-03-01T13:00:00Z/2018-05-11T15:30:00Z'
        - 'R-1/P1Y2M10DT2H30M/2022-05-11T15:30:00Z'
    error-invalid-request:
      type: object
      properties:
        error:
          type: object
          properties:
            description:
              type: string
            code:
              type: string
              enum:
                - invalid_request
    error-request-denied:
      type: object
      properties:
        error:
          type: object
          properties:
            description:
              type: string
            code:
              type: string
              enum:
                - request_denied
    error-unknown-interaction:
      type: object
      properties:
        error:
          type: object
          properties:
            description:
              type: string
            code:
              type: string
              enum:
                - unknown_interaction
    error-invalid-interaction:
      type: object
      properties:
        error:
          type: object
          properties:
            description:
              type: string
            code:
              type: string
              enum:
                - invalid_interaction
    error-user-denied:
      type: object
      properties:
        error:
          type: object
          properties:
            description:
              type: string
            code:
              type: string
              enum:
                - user_denied
  securitySchemes:
    GNAP:
      name: Authorization
      type: apiKey
      in: header
security:
  - GNAP: []
